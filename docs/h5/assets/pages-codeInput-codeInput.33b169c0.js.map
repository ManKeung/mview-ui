{"version":3,"file":"pages-codeInput-codeInput.33b169c0.js","sources":["../../../../../uni_modules/mview-ui/components/m-code-input/props.ts","../../../../../uni_modules/mview-ui/components/m-code-input/m-code-input.vue","../../../../../pages/codeInput/codeInput.vue"],"sourcesContent":["import { getCommon, getDefault } from '../props'\n\nexport default {\n    ...getCommon(),\n    // 键盘唤起是否自动上推页面\n    adjustPosition: {\n        type: Boolean,\n        default: getDefault('codeInput', 'adjustPosition')\n    },\n    // 最大输入长度\n    maxlength: {\n        type: [String, Number],\n        default: getDefault('codeInput', 'maxlength')\n    },\n    // 是否用圆点填充\n    dot: {\n        type: Boolean,\n        default: getDefault('codeInput', 'dot')\n    },\n    // 显示模式，box-盒子模式，line-底部横线模式\n    mode: {\n        type: String,\n        default: getDefault('codeInput', 'mode')\n    },\n    // 是否细边框\n    hairline: {\n        type: Boolean,\n        default: getDefault('codeInput', 'hairline')\n    },\n    // 字符间的距离\n    space: {\n        type: [String, Number],\n        default: getDefault('codeInput', 'space')\n    },\n    // 预置值\n    value: {\n        type: [String, Number],\n        default: getDefault('codeInput', 'value')\n    },\n    // 是否自动获取焦点\n    focus: {\n        type: Boolean,\n        default: getDefault('codeInput', 'focus')\n    },\n    // 字体是否加粗\n    bold: {\n        type: Boolean,\n        default: getDefault('codeInput', 'bold')\n    },\n    // 字体颜色\n    color: {\n        type: String,\n        default: getDefault('codeInput', 'color')\n    },\n    // 字体大小\n    fontSize: {\n        type: [String, Number],\n        default: getDefault('codeInput', 'fontSize')\n    },\n    // 输入框的大小，宽等于高\n    size: {\n        type: [String, Number],\n        default: getDefault('codeInput', 'size')\n    },\n    // 是否隐藏原生键盘，如果想用自定义键盘的话，需设置此参数为true\n    disabledKeyboard: {\n        type: Boolean,\n        default: getDefault('codeInput', 'disabledKeyboard')\n    },\n    // 边框和线条颜色\n    borderColor: {\n        type: String,\n        default: getDefault('codeInput', 'borderColor')\n    },\n    // 是否禁止输入\".\"符号\n    disabledDot: {\n        type: Boolean,\n        default: getDefault('codeInput', 'disabledDot')\n    },\n    // model值\n    modelValue: {\n        type: String,\n        default: getDefault('codeInput', 'value')\n    }\n}\n","<template>\n    <view class=\"m-code-input\">\n        <view\n            v-for=\"(item, index) in codeLength\"\n            class=\"m-code-input__item\"\n            :style=\"[itemStyle(index)]\"\n            :key=\"index\"\n        >\n            <view\n                v-if=\"props.dot && codeArray.length > index\"\n                class=\"m-code-input__item__dot\"\n                :style=\"{backgroundColor: props.color}\"\n            ></view>\n            <text\n                v-else\n                :style=\"textStyle\"\n            >\n                {{ codeArray[index] }}\n            </text>\n            <view\n                v-if=\"props.mode === 'line'\"\n                class=\"m-code-input__item__line\"\n                :style=\"[lineStyle]\"\n            ></view>\n            <!-- #ifndef APP-PLUS -->\n            <view v-if=\"isFocus && codeArray.length === index\" :style=\"{backgroundColor: color}\" class=\"m-code-input__item__cursor\"></view>\n            <!-- #endif -->\n        </view>\n        <input\n            class=\"m-code-input__input\"\n            type=\"number\"\n            :focus=\"props.focus\"\n            :maxlength=\"props.maxlength\"\n            :disabled=\"props.disabledKeyboard\"\n            :style=\"inputStyle\"\n            @input=\"inputHandler\"\n            @focus=\"isFocus = true\"\n            @blur=\"isFocus = false\"\n        >\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, ref, watch, nextTick as $nextTick } from 'vue'\nimport Props from './props'\n\nconst props = defineProps(Props)\nconst emits = defineEmits(['change', 'update:modelValue', 'finish'])\nconst inputValue = ref('')\nconst isFocus = ref(props.focus)\n\n// 根据长度，循环输入框的个数，因为头条小程序数值不能用于v-for\nconst codeLength = computed(() => {\n    return new Array(Number(props.maxlength))\n})\n\n// watch(() => props.value, val => {\nwatch(() => props.modelValue, val => {\n    // 转为字符串，超出部分截掉\n    inputValue.value = String(val).substring(0, props.maxlength)\n}, {\n    immediate: true\n})\n\n// 循环item的样式\nconst itemStyle = computed(() => {\n\n    return index => {\n        const style = {\n            width: uni.$m.addUnit(props.size),\n            height: uni.$m.addUnit(props.size)\n        }\n\n        // 盒子模式下，需要额外进行处理\n        if (props.mode === 'box') {\n            // 设置盒子的边框，如果是细边框，则设置为0.5px宽度\n            style.border = `${props.hairline ? 0.5 : 1}px solid ${props.borderColor}`\n        }\n\n        if (Number(props.space) === 0) {\n            // 给第一和最后一个盒子设置圆角\n            if (index === 0) {\n                style.borderTopLeftRadius = '3px'\n                style.borderBottomLeftRadius = '3px'\n            }\n\n            if (index === codeLength.value.length - 1) {\n                style.borderTopRightRadius = '3px'\n                style.borderBottomRightRadius = '3px'\n            }\n\n            if (index !== codeLength.value.length - 1) style.borderRight = 'none'\n        }\n\n        if (index !== codeLength.value.length - 1) {\n            // 设置验证码字符之间的距离，通过margin-right设置，最后一个字符，无需右边框\n            style.marginRight = uni.$m.addUnit(props.space)\n        } else {\n            // 最后一个盒子的有边框需要保留\n            style.marginRight = 0\n        }\n\n        return style\n    }\n})\n\n// 将输入的值，转为数组，给item历遍时，根据当前的索引显示数组的元素\nconst codeArray = computed(() => {\n    return String(inputValue.value).split('')\n})\n\n// 下划线模式下，横线的样式\nconst lineStyle = computed(() => {\n    const style = {}\n    style.height = props.hairline ? '2px' : '4px'\n    style.width = uni.$m.addUnit(props.size)\n    // 线条模式下，背景色即为边框颜色\n    style.backgroundColor = props.borderColor\n\n    return style\n})\n\nconst textStyle = computed(() => {\n    return {\n        fontSize: uni.$m.addUnit(props.fontSize),\n        fontWeight: props.bold ? 'bold' : 'normal',\n        color: props.color\n    }\n})\n\nconst inputStyle = computed(() => {\n    return {\n        height: uni.$m.addUnit(props.size)\n    }\n})\n\n// 监听输入框的值发生变化\nconst inputHandler = e => {\n    const value = e.detail.value\n    inputValue.value = value\n    // 是否允许输入“.”符号\n    if (props.disabledDot) {\n        $nextTick(() => {\n            inputValue.value = value.replace('.', '')\n        })\n    }\n\n    // 未达到maxlength之前，发送change事件，达到后发送finish事件\n    emits('change', value)\n    // 修改通过v-model双向绑定的值\n    emits('update:modelValue', value)\n    // 达到用户指定输入长度时，发出完成事件\n    if (String(value).length >= Number(props.maxlength)) {\n        emits('finish', value)\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../libs/css/components.scss';\n$m-code-input-cursor-width: 1px;\n$m-code-input-cursor-height: 40%;\n$m-code-input-cursor-animation-duration: 1s;\n$m-code-input-cursor-animation-name: m-cursor-flicker;\n\n.m-code-input {\n    @include flex;\n    position: relative;\n    overflow: hidden;\n\n    &__item {\n        @include flex;\n        justify-content: center;\n        align-items: center;\n        box-sizing: border-box;\n        position: relative;\n\n        &__text {\n            font-size: 15px;\n            color: $m-content-color;\n        }\n\n        &__dot {\n            width: 7px;\n            height: 7px;\n            border-radius: 100px;\n            background-color: $m-content-color;\n        }\n\n        &__line {\n            position: absolute;\n            bottom: 0;\n            height: 4px;\n            border-radius: 100px;\n            width: 40px;\n            background-color: $m-content-color;\n        }\n\n        /* #ifndef APP-PLUS */\n        &__cursor {\n            position: absolute;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%,-50%);\n            width: $m-code-input-cursor-width;\n            height: $m-code-input-cursor-height;\n            animation: $m-code-input-cursor-animation-duration m-cursor-flicker infinite;\n        }\n        /* #endif */\n    }\n\n    &__input {\n        // 之所以需要input输入框，是因为有它才能唤起键盘\n        // 这里将它设置为两倍的屏幕宽度，再将左边的一半移出屏幕，为了不让用户看到输入的内容\n        position: absolute;\n        left: -150rpx;\n        width: 1500rpx;\n        top: 0;\n        background-color: transparent;\n        text-align: left;\n    }\n}\n\n/* #ifndef APP-PLUS */\n@keyframes m-cursor-flicker {\n    0% {\n        opacity: 0;\n    }\n    50% {\n        opacity: 1;\n    }\n    100% {\n        opacity: 0;\n    }\n}\n/* #endif */\n</style>\n","<template>\n    <view class=\"page\">\n        <m-common title=\"验证码输入\" />\n        <view class=\"txt\">\n            基本使用\n        </view>\n        <m-code-input\n            v-model=\"val\"\n        />\n        <view class=\"txt\">\n            横向模式\n        </view>\n        <m-code-input\n            v-model=\"val2\"\n            mode=\"line\"\n        />\n        <view class=\"txt\">\n            设置长度\n        </view>\n        <m-code-input\n            v-model=\"val3\"\n            maxlength=\"4\"\n        />\n        <view class=\"txt\">\n            用\"●\"替代输入内容\n        </view>\n        <m-code-input\n            v-model=\"val4\"\n            maxlength=\"4\"\n            dot\n        />\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\n\nconst val = ref('')\nconst val2 = ref('')\nconst val3 = ref('')\nconst val4 = ref('')\n</script>\n\n<style lang=\"scss\" scoped>\n.page {\n    min-height: 100vh;\n    padding: $m-pad;\n\n    .txt {\n        font-size: 14px;\n        color: #8f9ca2;\n        padding: 10px 0;\n    }\n\n    .slot-left {\n        @include flex;\n        align-items: center;\n        padding: 5px 14px;\n        border-radius: 20px;\n    }\n}\n</style>\n"],"names":["getCommon","adjustPosition","type","Boolean","default","getDefault","maxlength","String","Number","dot","mode","hairline","space","value","focus","bold","color","fontSize","size","disabledKeyboard","borderColor","disabledDot","modelValue","inputValue","ref","isFocus","props","codeLength","computed","Array","val","substring","immediate","itemStyle","style","width","uni","$m","addUnit","height","border","index","borderTopLeftRadius","borderBottomLeftRadius","length","borderTopRightRadius","borderBottomRightRadius","borderRight","marginRight","codeArray","split","lineStyle","backgroundColor","textStyle","fontWeight","inputStyle","inputHandler","e","detail","replace","val2","val3","val4"],"mappings":"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"}