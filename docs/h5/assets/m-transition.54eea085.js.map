{"version":3,"file":"m-transition.54eea085.js","sources":["../../../../../uni_modules/mview-ui/components/m-transition/props.ts","../../../../../uni_modules/mview-ui/components/m-transition/m-transition.vue"],"sourcesContent":["export default {\n    ...uni.$m.config.props,\n    // 是否展示组件\n    show: {\n        type: Boolean,\n        default: uni.$m.props.transition.show\n    },\n    // 使用的动画模式\n    mode: {\n        type: String,\n        default: uni.$m.props.transition.mode\n    },\n    // 动画的执行时间，单位ms\n    duration: {\n        type: [String, Number],\n        default: uni.$m.props.transition.duration\n    },\n    // 使用的动画过渡函数\n    timingFunction: {\n        type: String,\n        default: uni.$m.props.transition.timingFunction\n    }\n}\n","<template>\n    <view\n        v-if=\"inited\"\n        ref=\"$transition\"\n        class=\"m-transition\"\n        :class=\"classes\"\n        :style=\"[mergeStyle]\"\n        @tap=\"handleClick\"\n        @touchmove=\"$m.noop\"\n    >\n        <slot></slot>\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, nextTick as $nextTick, computed, watch } from 'vue'\nimport animationMap from './nvue.ani-map'\nimport Props from './props'\n\nconst props = defineProps(Props)\n\n// ref\nconst $transition = ref(null)\n// 是否显示/隐藏组件\nconst inited = ref(false)\n// 记录组件动画的状态\nconst status = ref('')\n// 组件是否结束的标记\nconst transitionEnded = ref(false)\n// 组件是否展示\nconst display = ref(false)\n// 应用的类名\nconst classes = ref('')\n// 组件内部的样式\nconst viewStyle = ref({})\n\nconst mergeStyle = computed(() => {\n    return {\n        // #ifndef APP-NVUE\n        transitionDuration: `${props.duration}ms`,\n        transitionTimingFunction: props.timingFunction,\n        // #endif\n        // 避免自定义样式影响到动画属性，所以写在viewStyle前面\n        ...uni.$m.addStyle(props.customStyle),\n        ...viewStyle\n    }\n})\n\nwatch(() => props.show, (newVal) => {\n    // vue和nvue分别执行不同的方法\n    // #ifdef APP-NVUE\n    newVal ? nvueEnter() : nvueLeave()\n    // #endif\n    // #ifndef APP-NVUE\n    newVal ? vueEnter() : vueLeave()\n    // #endif\n}, {\n    immediate: true\n})\n\n// 定义一个一定时间后自动成功的promise，让调用nextTick方法处，进入下一个then方法\nconst nextTick = () => Promise(resolve => setTimeout(resolve, 1000 / 50))\n// nvue动画模块实现细节抽离在外部文件\n\n// #ifndef APP-NVUE\n// 定义类名，通过给元素动态切换类名，赋予元素一定的css动画样式\nfunction getClassNames(name) {\n    return ({\n        enter: `m-${name}-enter m-${name}-enter-active`,\n        'enter-to': `m-${name}-enter-to m-${name}-enter-active`,\n        leave: `m-${name}-leave m-${name}-leave-active`,\n        'leave-to': `m-${name}-leave-to m-${name}-leave-active`\n    })\n}\n// #endif\n\n// #ifdef APP-NVUE\n// 引入nvue(weex)的animation动画模块，文档见：\n// https://weex.apache.org/zh/docs/modules/animation.html#transition\nconst animation = uni.requireNativePlugin('animation')\nconst getStyle = (name) => animationMap[name]\n// #endif\n\nconst emits = defineEmits(['click', 'beforeEnter', 'enter', 'afterEnter', 'beforeLeave', 'leave', 'afterLeave'])\n\n// 组件被点击发出事件\nconst handleClick = () => {\n    emits('click')\n}\n\n// #ifndef APP-NVUE\n// vue版本的组件进场处理\nfunction vueEnter() {\n    // 动画进入时的类名\n    const classNames = getClassNames(props.mode)\n    // 定义状态和发出动画进入前事件\n    status.value = 'enter'\n    emits('beforeEnter')\n    inited.value = true\n    display.value = true\n    classes.value = classNames.enter\n    $nextTick(async () => {\n        // #ifdef H5\n        await uni.$m.sleep(20)\n        // #endif\n        // 组件动画进入后触发的事件\n        emits('afterEnter')\n        // 标识动画尚未结束\n        transitionEnded.value = false\n        // 赋予组件enter-to类名\n        classes.value = classNames['enter-to']\n    })\n}\n\n// 动画离场处理\nfunction vueLeave() {\n    // 如果不是展示状态，无需执行逻辑\n    if (!display.value) return\n\n    const classNames = getClassNames(props.mode)\n    // 标记离开状态和发出事件\n    status.value = 'leave'\n    emits('beforeLeave')\n    // 获得类名\n    classes.value = classNames.leave\n\n    $nextTick(() => {\n        // 标记动画已经结束了\n        transitionEnded.value = false\n        // 组件执行动画，到了执行的执行时间后，执行一些额外处理\n        setTimeout(onTransitionEnd, props.duration)\n        classes.value = classNames['leave-to']\n    })\n}\n// #endif\n\n// #ifdef APP-NVUE\nfunction nvueEnter() {\n    // 获得样式的名称\n    const currentStyle = getStyle(props.mode)\n    // 定义状态和发出动画进入前事件\n    status.value = 'enter'\n    emits('beforeEnter')\n    inited.value = true\n    display.value = true\n    // 在nvue安卓上，由于渲染速度慢，在弹窗，键盘，日历等组件中，渲染其中的内容需要时间\n    // 导致出现弹窗卡顿，这里让其一开始为透明状态，等一定时间渲染完成后，再让其隐藏起来，再让其按正常逻辑出现\n    viewStyle.value = {\n        opacity: 0\n    }\n\n    $nextTick(() => {\n       viewStyle.value = currentStyle.enter\n\n        Promise\n            .resolve()\n            .then(() => {\n                emits('enter')\n                // nvue的transition动画模块需要通过ref调用组件，注意此处的ref不同于vue的this.$refs['u-transition']用法\n                animation.transition($transition.value.$el, {\n                    styles: currentStyle['enter-to'],\n                    duration: props.duration,\n                    timingFunction: props.timingFunction,\n                    needLayout: false,\n                    delay: 0\n                }, () => {\n                    emits('afterEnter')\n                })\n            })\n            .catch(() => {})\n    })\n}\n\nfunction nvueLeave() {\n    if (!display.value) return\n\n    const currentStyle = getStyle(props.mode)\n    // 标记离开状态和发出事件\n    status.value = 'leave'\n    emits('beforeLeave')\n    // 合并样式\n    viewStyle.value = currentStyle.leave\n    // 放到promise中处理执行过程\n    Promise\n        .resolve()\n        .then(nextTick) // 等待几十ms\n        .then(() => {\n            transitionEnded.value = false\n            emits('leave')\n            animation.transition($transition.value.$el, {\n                styles: currentStyle['leave-to'],\n                duration: props.duration,\n                timingFunction: props.timingFunction,\n                needLayout: false,\n                delay: 0\n            }, () => {\n                onTransitionEnd()\n            })\n        })\n        .catch(() => {})\n}\n// #endif\n\n// 完成过渡后触发\nfunction onTransitionEnd () {\n    // 如果已经是结束的状态，无需再处理\n    if (transitionEnded.value) return\n    transitionEnded.value = true\n    emits(status.value === 'leave' ? 'afterLeave' : 'afterEnter')\n    // 发出组件动画执行后的事件\n    if (!props.show && display.value) {\n        display.value = false\n        inited.value = false\n    }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../libs/css/components.scss\";\n/* #ifndef APP-NVUE */\n// vue版本动画相关的样式抽离在外部文件\n@import './vue.ani-style.scss';\n/* #endif */\n</style>\n"],"names":["uni","$m","config","props","show","type","Boolean","default","transition","mode","String","duration","Number","timingFunction","$transition","ref","inited","status","transitionEnded","display","classes","viewStyle","mergeStyle","computed","__spreadValues","transitionDuration","transitionTimingFunction","addStyle","customStyle","name","enter","leave","newVal","classNames","getClassNames","value","async","sleep","vueEnter","onTransitionEnd","vueLeave","immediate","handleClick"],"mappings":"wkBAAA,iCACOA,IAAIC,GAAGC,OAAOC,SADN,CAGXC,KAAM,CACFC,KAAMC,QACNC,QAASP,IAAIC,GAAGE,MAAMK,WAAWJ,MAGrCK,KAAM,CACFJ,KAAMK,OACNH,QAASP,IAAIC,GAAGE,MAAMK,WAAWC,MAGrCE,SAAU,CACNN,KAAM,CAACK,OAAQE,QACfL,QAASP,IAAIC,GAAGE,MAAMK,WAAWG,UAGrCE,eAAgB,CACZR,KAAMK,OACNH,QAASP,IAAIC,GAAGE,MAAMK,WAAWK,8ICEnCC,EAAcC,EAAI,MAElBC,EAASD,GAAI,GAEbE,EAASF,EAAI,IAEbG,EAAkBH,GAAI,GAEtBI,EAAUJ,GAAI,GAEdK,EAAUL,EAAI,IAEdM,EAAYN,EAAI,IAEhBO,EAAaC,GAAS,IACjBC,KAEHC,mBAAoB,GAAGtB,EAAMQ,aAC7Be,yBAA0BvB,EAAMU,gBAG7Bb,IAAIC,GAAG0B,SAASxB,EAAMyB,cACtBP,gBAsBYQ,SACX,CACJC,MAAO,KAAKD,aAAgBA,iBAC5B,WAAY,KAAKA,gBAAmBA,iBACpCE,MAAO,KAAKF,aAAgBA,iBAC5B,WAAY,KAAKA,gBAAmBA,qBAvBtC,IAAM1B,EAAMC,OAAO4B,uBA8CfC,EAAaC,EAAc/B,EAAMM,QAEhC0B,MAAQ,UACT,iBACCA,OAAQ,IACPA,OAAQ,IACRA,MAAQF,EAAWH,SACjBM,gBAEApC,IAAIC,GAAGoC,MAAM,MAGb,gBAEUF,OAAQ,IAEhBA,MAAQF,EAAW,eAxDtBK,kBA+DJnB,EAAQgB,mBAEPF,EAAaC,EAAc/B,EAAMM,QAEhC0B,MAAQ,UACT,iBAEEA,MAAQF,EAAWF,SAEjB,OAEUI,OAAQ,aAEbI,EAAiBpC,EAAMQ,YAC1BwB,MAAQF,EAAW,eA7ETO,KAEvB,CACCC,WAAW,UA6BTC,EAAc,OACV,uBAuHFxB,EAAgBiB,UACJA,OAAQ,IACD,UAAjBlB,EAAOkB,MAAoB,aAAe,eAE3ChC,EAAMC,MAAQe,EAAQgB,UACfA,OAAQ,IACTA,OAAQ"}