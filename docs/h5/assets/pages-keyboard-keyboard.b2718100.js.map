{"version":3,"file":"pages-keyboard-keyboard.b2718100.js","sources":["../../../../../uni_modules/mview-ui/components/m-number-keyboard/props.ts","../../../../../uni_modules/mview-ui/components/m-number-keyboard/m-number-keyboard.vue","../../../../../uni_modules/mview-ui/components/m-english-keyboard/props.ts","../../../../../uni_modules/mview-ui/components/m-english-keyboard/m-english-keyboard.vue","../../../../../uni_modules/mview-ui/components/m-keyboard/props.ts","../../../../../uni_modules/mview-ui/components/m-keyboard/m-keyboard.vue","../../../../../pages/keyboard/keyboard.vue"],"sourcesContent":["export default {\n    // 是否打乱键盘按键的顺序\n    random: {\n       type: Boolean,\n        default: false\n    },\n    // 是否去掉小数点\n    dotDisabled: {\n        type: Boolean,\n        default: true\n    },\n    // 是否震动\n    vibrate: {\n        type: Boolean,\n        default: false\n    },\n    // 键盘模式\n    mode: {\n        type: String,\n        default: 'number' // card -> 身份证\n    }\n}\n","<template>\n    <view class=\"m-keyboard\" @touchmove.stop.prevent=\"$m.noop\">\n        <view\n            v-for=\"(group, i) in keyList\"\n            :key=\"i\"\n            class=\"m-keyboard__button\"\n        >\n            <view\n                v-for=\"(item, j) in group\"\n                class=\"m-keyboard__button__inner-wrapper\"\n                :class=\"{btn: item === 'clear'}\"\n                :key=\"j\"\n            >\n                <view\n                    v-if=\"item === 'clear'\"\n                    class=\"m-keyboard__button__inner-wrapper__inner\"\n                    hover-class=\"m-hover-class\"\n                    :class=\"{btn: item === 'clear'}\"\n                    :hover-stay-time=\"200\"\n                    @touchstart=\"handleClickInput(item)\"\n                    @touchend=\"clearTimer(item)\"\n                >\n                    <m-icon v-if=\"item === 'clear'\" size=\"28\" name=\"backspace\" color=\"#303133\"></m-icon>\n                    <text v-else class=\"m-keyboard__button__inner-wrapper__inner__text\">{{ item }}</text>\n                </view>\n                <view\n                    v-else\n                    class=\"m-keyboard__button__inner-wrapper__inner\"\n                    hover-class=\"m-hover-class\"\n                    :class=\"{btn: item === 'clear'}\"\n                    :hover-stay-time=\"200\"\n                    @tap=\"handleClickInput(item)\"\n                >\n                    <m-icon v-if=\"item === 'clear'\" size=\"28\" name=\"backspace\" color=\"#303133\"></m-icon>\n                    <text v-else class=\"m-keyboard__button__inner-wrapper__inner__text\">{{ item }}</text>\n                </view>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed, onUnmounted } from 'vue'\nimport Props from './props'\n\nconst props = defineProps(Props)\nconst emits = defineEmits(['change', 'backspace'])\n\nconst timer = ref(null)\n\nconst keyList = computed(() => {\n    // 数字\n    let num = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'X', '0']\n\n\n    switch (props.mode){\n        case 'number':\n            const arr = ['X']\n\n            if (props.dotDisabled) arr.push('.')\n            num = num.filter(item => arr.indexOf(item) === -1)\n            break\n        default:\n            num = num.filter(item => item !== '.')\n            break\n    }\n\n    if (props.random) {\n        num = num.sort(() => Math.random() > 0.5 ? -1 : 1)\n    }\n\n    num.push('clear')\n\n\n    const tmp = []\n\n    tmp[0] = num.slice(0, 3)\n    tmp[1] = num.slice(3, 6)\n    tmp[2] = num.slice(6, 9)\n    tmp[3] = num.slice(9)\n\n    return tmp\n})\n\nconst handleClickInput = (value = '') => {\n    props.vibrate && uni.$m.vibrate()\n\n    if (value === 'clear') {\n        emits('backspace')\n        clearInterval(timer.value)\n\n        timer.value = setInterval(() => {\n            emits('backspace')\n        }, 250)\n        return\n    }\n\n    emits('change', value)\n}\n\nconst clearTimer = (item = 'clear') => {\n    if (item !== 'clear') return\n    clearInterval(timer.value)\n    timer.value = null\n}\n\nonUnmounted(() => {\n    clearTimer()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../libs/css/components.scss';\n$m-keyboard-background-color: rgb(224, 228, 230) !default;\n$m-keyboard-padding: 6px 0 6px !default;\n$m-keyboard-button-inner-width: 64rpx !default;\n$m-keyboard-button-inner-background-color: #ffffff !default;\n$m-keyboard-button-height: 80rpx !default;\n$m-keyboard-button-inner-box-shadow: 0 1px 0px #999992 !default;\n$m-keyboard-button-border-radius: 4px !default;\n$m-keyboard-button-inner-margin: 8rpx 8rpx !default;\n$m-keyboard-button-text-font-size: 16px !default;\n$m-keyboard-button-text-color: $m-main-color !default;\n$m-keyboard-center-inner-margin: 0 4rpx !default;\n$m-keyboard-special-button-width: 134rpx !default;\n$m-keyboard-lang-font-size: 16px !default;\n$m-keyboard-lang-color: $m-main-color !default;\n$m-keyboard-active-color: $m-primary !default;\n$m-keyboard-line-font-size: 15px !default;\n$m-keyboard-line-color: $m-main-color !default;\n$m-keyboard-line-margin: 0 1px !default;\n$m-keyboard-m-hover-class-background-color: #bbbcc6 !default;\n\n.m-keyboard {\n    width: 100%;\n    box-sizing: border-box;\n    @include flex(column);\n    justify-content: space-around;\n    background-color: $m-keyboard-background-color;\n    align-items: stretch;\n    padding: $m-keyboard-padding;\n\n    &__button {\n        @include flex;\n        justify-content: center;\n        justify-content: space-around;\n        flex: 1;\n        padding: 0 4rpx;\n\n        &__inner-wrapper {\n            box-shadow: $m-keyboard-button-inner-box-shadow;\n            margin: $m-keyboard-button-inner-margin;\n            border-radius: $m-keyboard-button-border-radius;\n            flex: 1;\n\n            &.btn {\n                background-color: $m-keyboard-m-hover-class-background-color;\n            }\n\n            &__inner {\n                @include flex;\n                width: 100%;\n                justify-content: center;\n                align-items: center;\n                background-color: $m-keyboard-button-inner-background-color;\n                height: $m-keyboard-button-height;\n                border-radius: $m-keyboard-button-border-radius;\n\n                &.btn {\n                    background-color: $m-keyboard-m-hover-class-background-color;\n                    // box-shadow: $m-keyboard-button-inner-box-shadow;\n                }\n\n                &__text {\n                    font-size: $m-keyboard-button-text-font-size;\n                    color: $m-keyboard-button-text-color;\n                }\n            }\n        }\n    }\n}\n\n.m-hover-class {\n    background-color: $m-keyboard-m-hover-class-background-color;\n}\n\n.btn {\n    .m-hover-class {\n        opacity: 0.6;\n    }\n}\n</style>\n","export default {\n    // 是否打乱键盘按键的顺序\n    random: {\n       type: Boolean,\n        default: false\n    },\n    // 是否震动\n    vibrate: {\n        type: Boolean,\n        default: false\n    }\n}\n","<template>\n    <view class=\"m-keyboard\" @touchmove.stop.prevent=\"$m.noop\">\n        <view\n            v-for=\"(group, i) in keyList\"\n            :key=\"i\"\n            class=\"m-keyboard__button\"\n        >\n            <view\n                v-for=\"(item, j) in group\"\n                class=\"m-keyboard__button__inner-wrapper\"\n                :class=\"{btn: ['abc', '@123', 'clear'].indexOf(item) !== -1}\"\n                :key=\"j\"\n            >\n                <view\n                    v-if=\"item === 'clear'\"\n                    class=\"m-keyboard__button__inner-wrapper__inner\"\n                    hover-class=\"m-hover-class\"\n                    :class=\"{btn: ['abc', '@123', 'clear'].indexOf(item) !== -1}\"\n                    :hover-stay-time=\"200\"\n                    @touchstart=\"handleClickInput(item)\"\n                    @touchend=\"clearTimer(item)\"\n                >\n                    <m-icon v-if=\"item === 'clear'\" size=\"28\" name=\"backspace\" color=\"#303133\"></m-icon>\n                    <text v-else class=\"m-keyboard__button__inner-wrapper__inner__text\">{{ abcStr(item) }}</text>\n                </view>\n                <view\n                    v-else\n                    class=\"m-keyboard__button__inner-wrapper__inner\"\n                    hover-class=\"m-hover-class\"\n                    :class=\"{btn: ['abc', '@123', 'clear'].indexOf(item) !== -1}\"\n                    :hover-stay-time=\"200\"\n                    @tap=\"handleClickInput(item)\"\n                >\n                    <m-icon v-if=\"item === 'clear'\" size=\"28\" name=\"backspace\" color=\"#303133\"></m-icon>\n                    <text v-else class=\"m-keyboard__button__inner-wrapper__inner__text\">{{ abcStr(item) }}</text>\n                </view>\n            </view>\n        </view>\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref, computed, onUnmounted } from 'vue'\nimport Props from './props'\n\nconst props = defineProps(Props)\nconst emits = defineEmits(['change', 'backspace'])\n\nconst timer = ref(null)\n// 是小写\nconst isAbc = ref(true)\n// 是字母\nconst isEn = ref(true)\n\nconst keyList = computed(() => {\n    // 字母\n    let abc = ['Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'Z', 'X', 'C', 'V', 'B', 'N', 'M'].map(item => {\n        if (isAbc.value) {\n            return item.toLocaleLowerCase()\n        }\n\n        return item\n    })\n    // 字母键盘字符\n    let abcF = [':', \"'\", '/', '>', '.', '?', ',', '<']\n\n    // 数字\n    let num = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n    // 数字键盘字符\n    let numF = ['`', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '-', '+', '=', '{', '}', '[', ']', ';', '\"', '~', '?', '|', '_', '-', '\\\\']\n\n    if (props.random) {\n        abc = abc.sort(() => Math.random() > 0.5 ? -1 : 1)\n        abcF = abcF.sort(() => Math.random() > 0.5 ? -1 : 1)\n        num = num.sort(() => Math.random() > 0.5 ? -1 : 1)\n        numF = numF.sort(() => Math.random() > 0.5 ? -1 : 1)\n    }\n\n\n    const tmp = []\n\n    if (isEn.value) {\n        tmp[0] = abc.slice(0, 10)\n        tmp[1] = abc.slice(10, 20)\n        tmp[2] = ['abc', ...abc.slice(20, 26), ...abcF.slice(0, 2)]\n        tmp[3] = ['@123', ...abcF.slice(2, 8), 'clear']\n    } else {\n        tmp[0] = num\n        tmp[1] = numF.slice(0, 10)\n        tmp[2] = numF.slice(10, 20)\n        tmp[3] = ['abc', ...numF.slice(20, 26), 'clear']\n    }\n\n    return tmp\n})\n\nconst abcStr = computed(() => {\n    return (item = '') => {\n        if (!item) return ''\n\n        if (item === 'abc') return isAbc.value && isEn.value ? 'ABC' : 'abc'\n\n        return item\n    }\n})\n\nconst handleClickInput = (value = '') => {\n    props.vibrate && uni.$m.vibrate()\n\n    if (isEn.value && value === 'abc') return isAbc.value = !isAbc.value\n\n    if (!isEn.value && value === 'abc') return isEn.value = true\n    if (value === '@123') return isEn.value = false\n\n    if (value === 'clear') {\n        emits('backspace')\n        clearInterval(timer.value)\n\n        timer.value = setInterval(() => {\n            emits('backspace')\n        }, 250)\n\n        return\n    }\n\n    emits('change', value)\n}\n\nconst clearTimer = (item = 'clear') => {\n    if (item !== 'clear') return\n    clearInterval(timer.value)\n    timer.value = null\n}\n\nonUnmounted(() => {\n    clearTimer()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n@import '../../libs/css/components.scss';\n$m-keyboard-background-color: rgb(224, 228, 230) !default;\n$m-keyboard-padding: 6px 0 6px !default;\n$m-keyboard-button-inner-width: 64rpx !default;\n$m-keyboard-button-inner-background-color: #ffffff !default;\n$m-keyboard-button-height: 80rpx !default;\n$m-keyboard-button-inner-box-shadow: 0 1px 0px #999992 !default;\n$m-keyboard-button-border-radius: 4px !default;\n$m-keyboard-button-inner-margin: 8rpx 5rpx !default;\n$m-keyboard-button-text-font-size: 16px !default;\n$m-keyboard-button-text-color: $m-main-color !default;\n$m-keyboard-center-inner-margin: 0 4rpx !default;\n$m-keyboard-special-button-width: 134rpx !default;\n$m-keyboard-lang-font-size: 16px !default;\n$m-keyboard-lang-color: $m-main-color !default;\n$m-keyboard-active-color: $m-primary !default;\n$m-keyboard-line-font-size: 15px !default;\n$m-keyboard-line-color: $m-main-color !default;\n$m-keyboard-line-margin: 0 1px !default;\n$m-keyboard-m-hover-class-background-color: #bbbcc6 !default;\n\n.m-keyboard {\n    width: 100%;\n    box-sizing: border-box;\n    @include flex(column);\n    justify-content: space-around;\n    background-color: $m-keyboard-background-color;\n    align-items: stretch;\n    padding: $m-keyboard-padding;\n\n    &__button {\n        @include flex;\n        justify-content: center;\n        justify-content: space-around;\n        flex: 1;\n        padding: 0 2.5rpx;\n\n        &__inner-wrapper {\n            box-shadow: $m-keyboard-button-inner-box-shadow;\n            margin: $m-keyboard-button-inner-margin;\n            border-radius: $m-keyboard-button-border-radius;\n            flex: 1;\n\n            &.btn {\n                flex: 2;\n                padding: 0 5rpx;\n                background-color: $m-keyboard-m-hover-class-background-color;\n            }\n\n            &__inner {\n                @include flex;\n                width: 100%;\n                justify-content: center;\n                align-items: center;\n                background-color: $m-keyboard-button-inner-background-color;\n                height: $m-keyboard-button-height;\n                border-radius: $m-keyboard-button-border-radius;\n\n                &.btn {\n                    background-color: $m-keyboard-m-hover-class-background-color;\n                    // box-shadow: $m-keyboard-button-inner-box-shadow;\n                }\n\n                &__text {\n                    font-size: $m-keyboard-button-text-font-size;\n                    color: $m-keyboard-button-text-color;\n                }\n            }\n        }\n    }\n}\n\n.m-hover-class {\n    background-color: $m-keyboard-m-hover-class-background-color;\n}\n\n.btn {\n    .m-hover-class {\n        opacity: 0.7;\n    }\n}\n</style>\n","import { getCommon, getDefault } from '../props'\n\nexport default {\n    ...getCommon(),\n    // 键盘的类型，number-数字键盘，card-身份证键盘\n    mode: {\n        type: String,\n        default: getDefault('keyboard', 'mode')\n    },\n    // 是否显示键盘的\".\"符号\n    dotDisabled: {\n        type: Boolean,\n        default: getDefault('keyboard', 'dotDisabled')\n    },\n    // 是否显示顶部工具条\n    tooltip: {\n        type: Boolean,\n        default: getDefault('keyboard', 'tooltip')\n    },\n    // 是否显示工具条中间的提示\n    showTips: {\n        type: Boolean,\n        default: getDefault('keyboard', 'showTips')\n    },\n    // 工具条中间的提示文字\n    tips: {\n        type: String,\n        default: getDefault('keyboard', 'tips')\n    },\n    // 是否显示工具条左边的\"取消\"按钮\n    showCancel: {\n        type: Boolean,\n        default: getDefault('keyboard', 'showCancel')\n    },\n    // 是否显示工具条右边的\"完成\"按钮\n    showConfirm: {\n        type: Boolean,\n        default: getDefault('keyboard', 'showConfirm')\n    },\n    // 是否打乱键盘按键的顺序\n    random: {\n        type: Boolean,\n        default: getDefault('keyboard', 'random')\n    },\n    // 是否开启底部安全区适配，开启的话，会在iPhoneX机型底部添加一定的内边距\n    safeAreaInsetBottom: {\n        type: Boolean,\n        default: getDefault('keyboard', 'safeAreaInsetBottom')\n    },\n    // 是否允许通过点击遮罩关闭键盘\n    closeOnClickOverlay: {\n        type: Boolean,\n        default: getDefault('keyboard', 'closeOnClickOverlay')\n    },\n    // 控制键盘的弹出与收起\n    show: {\n        type: Boolean,\n        default: getDefault('keyboard', 'show')\n    },\n    // 是否显示遮罩，某些时候数字键盘时，用户希望看到自己的数值，所以可能不想要遮罩\n    overlay: {\n        type: Boolean,\n        default: getDefault('keyboard', 'overlay')\n    },\n    // z-index值\n    zIndex: {\n        type: [String, Number],\n        default: getDefault('keyboard', 'zIndex')\n    },\n    // 取消按钮的文字\n    cancelText: {\n        type: String,\n        default: getDefault('keyboard', 'cancelText')\n    },\n    // 确认按钮的文字\n    confirmText: {\n        type: String,\n        default: getDefault('keyboard', 'confirmText')\n    },\n    // 是否开始震动\n    vibrate: {\n        type: Boolean,\n        default: getDefault('keyboard', 'vibrate')\n    }\n}\n","<template>\n    <m-popup\n        mode=\"bottom\"\n        :overlay=\"props.overlay\"\n        :closeOnClickOverlay=\"props.closeOnClickOverlay\"\n        :popup=\"false\"\n        :show=\"props.show\"\n        :safeAreaInsetBottom=\"props.safeAreaInsetBottom\"\n        @close=\"popupClose\"\n        :zIndex=\"props.zIndex\"\n        :customStyle=\"{\n            backgroundColor: 'rgb(214, 218, 220)'\n        }\"\n    >\n        <view class=\"m-keyboard\">\n            <slot></slot>\n            <view v-if=\"props.tooltip\" class=\"m-keyboard__tooltip\">\n                <view hover-class=\"m-hover-class\" :hover-stay-time=\"200\">\n                    <text v-if=\"props.showCancel\" class=\"m-keyboard__tooltip__item m-keyboard__tooltip__cancel\" @tap=\"onCancel\">{{ props.showCancel && props.cancelText }}</text>\n                </view>\n                <view v-if=\"props.showTips\" class=\"m-keyboard__tooltip__item m-keyboard__tooltip__tips\">\n                   {{props.tips ? props.tips : props.mode == 'number' ? '数字键盘' : mode == 'card' ? '身份证键盘' : '英文键盘'}}\n                </view>\n                <view\n\t\t\t\t    hover-class=\"m-hover-class\"\n\t\t\t\t    :hover-stay-time=\"100\"\n\t\t\t\t>\n\t\t\t\t\t<text v-if=\"props.showConfirm\" class=\"m-keyboard__tooltip__item m-keyboard__tooltip__submit\" hover-class=\"m-hover-class\" @tap=\"onConfirm\">{{props.showConfirm && props.confirmText}}</text>\n\t\t\t\t</view>\n            </view>\n            <template v-if=\"props.mode === 'number' || props.mode === 'card'\">\n                <m-number-keyboard\n                    :random=\"props.random\"\n                    :mode=\"props.mode\"\n                    :dotDisabled=\"props.dotDisabled\"\n                    :vibrate=\"props.vibrate\"\n                    @change=\"change\"\n                    @backspace=\"backspace\"\n                ></m-number-keyboard>\n            </template>\n            <template v-else>\n                <m-english-keyboard\n                    :random=\"props.random\"\n                    :mode=\"props.mode\"\n                    :vibrate=\"props.vibrate\"\n                    @change=\"change\"\n                    @backspace=\"backspace\"\n                ></m-english-keyboard>\n            </template>\n        </view>\n    </m-popup>\n</template>\n\n<script lang=\"ts\" setup>\nimport {} from 'vue'\nimport Props from './props'\n\nconst props = defineProps(Props)\nconst emits = defineEmits(['change', 'close', 'confirm', 'cancel', 'backspace'])\n\n// 输入值改变\nconst change = (e = '') => {\n    emits('change', e)\n}\n\n// 键盘关闭\nconst popupClose = () => {\n    emits('close')\n}\n\n// 输入完成\nconst onConfirm = () => {\n    emits('confirm')\n}\n\n// 取消输入\nconst onCancel = () => {\n    emits('cancel')\n}\n\n// 退格键\nconst backspace = () => {\n    emits('backspace')\n}\n</script>\n\n<style lang=\"scss\" scoped>\n@import \"../../libs/css/components.scss\";\n\n.m-keyboard {\n    &__tooltip {\n        @include flex;\n        justify-content: space-between;\n        background-color: #FFFFFF;\n        padding: 14px 12px;\n\n        &__item {\n            color: #333333;\n            flex: 1;\n            text-align: center;\n            font-size: 15px;\n        }\n\n        &__submit {\n            text-align: right;\n            color: $m-primary;\n        }\n\n        &__cancel {\n            text-align: left;\n            color: #888888;\n        }\n\n        &__tips {\n            color: $m-tips-color;\n        }\n    }\n}\n\n.m-hover-class {\n    opacity: 0.6;\n}\n</style>\n","<template>\n    <view>\n        <m-common title=\"键盘\" />\n        <m-cell-group border>\n            <m-cell\n                title=\"基本使用\"\n                is-link\n                @click=\"handleClick(0)\"\n            />\n            <m-cell\n                title=\"数字键盘\"\n                is-link\n                @click=\"handleClick(1)\"\n            />\n            <m-cell\n                title=\"身份证键盘\"\n                is-link\n                @click=\"handleClick(2)\"\n            />\n            <m-cell\n                title=\"隐藏键盘'.'符号\"\n                is-link\n                @click=\"handleClick(3)\"\n            />\n            <m-cell\n                title=\"打乱键盘顺序\"\n                is-link\n                @click=\"handleClick(4)\"\n            />\n        </m-cell-group>\n        <m-keyboard\n            :show=\"show\"\n            :mode=\"mode\"\n            :random=\"random\"\n            :dot-disabled=\"flg\"\n            @close=\"show = false\"\n            @cancel=\"show = false\"\n            @confirm=\"show = false\"\n            @change=\"change\"\n            @backspace=\"backspace\"\n        />\n    </view>\n</template>\n\n<script lang=\"ts\" setup>\nimport {ref} from 'vue'\n\nconst show = ref(false)\nconst mode = ref('')\nconst flg = ref(false)\nconst random = ref(false)\nconst value = ref('')\n\nconst handleClick = index => {\n    const obj = {\n        0: '',\n        1: 'number',\n        2: 'card',\n        3: 'number',\n        4: ''\n    }\n\n    value.value = ''\n    show.value = true\n    mode.value = obj[index]\n    flg.value = index === 3\n    random.value = index === 4\n}\n\nconst change = val => {\n    value.value += val\n    console.log(value.value)\n}\n\nconst backspace = () => {\n    if (value.value.length) value.value = value.value.substr(0, value.value.length - 1)\n    console.log(value.value)\n}\n</script>\n"],"names":["random","type","Boolean","default","dotDisabled","vibrate","mode","String","timer","ref","keyList","computed","num","props","arr","push","filter","indexOf","item","sort","Math","tmp","slice","handleClickInput","value","uni","$m","setInterval","clearTimer","isAbc","isEn","abc","map","toLocaleLowerCase","abcF","numF","abcStr","getCommon","getDefault","tooltip","showTips","tips","showCancel","showConfirm","safeAreaInsetBottom","closeOnClickOverlay","show","overlay","zIndex","Number","cancelText","confirmText","change","e","popupClose","onConfirm","onCancel","backspace","flg","handleClick","index","val","log","length","substr"],"mappings":"w1BAAA,MAAe,CAEXA,OAAQ,CACLC,KAAMC,QACLC,SAAS,GAGbC,YAAa,CACTH,KAAMC,QACNC,SAAS,GAGbE,QAAS,CACLJ,KAAMC,QACNC,SAAS,GAGbG,KAAM,CACFL,KAAMM,OACNJ,QAAS,kHC6BXK,EAAQC,EAAI,MAEZC,EAAUC,GAAS,SAEjBC,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,QAIzD,WADDC,EAAMP,YAEAQ,EAAM,CAAC,KAETD,EAAMT,eAAiBW,KAAK,OAC1BH,EAAII,gBAAeF,EAAIG,QAAQC,YAG/BN,EAAII,WAAwB,MAATE,IAI7BL,EAAMb,WACAY,EAAIO,MAAK,IAAMC,KAAKpB,SAAW,MAAW,OAGhDe,KAAK,eAGHM,EAAM,YAER,GAAKT,EAAIU,MAAM,EAAG,KAClB,GAAKV,EAAIU,MAAM,EAAG,KAClB,GAAKV,EAAIU,MAAM,EAAG,KAClB,GAAKV,EAAIU,MAAM,GAEZD,KAGLE,EAAmB,CAACC,EAAQ,WACxBnB,SAAWoB,IAAIC,GAAGrB,UAEV,UAAVmB,WACM,2BACQhB,EAAMgB,cAEdA,MAAQG,aAAY,OAChB,eACP,QAID,SAAUH,IAGdI,EAAa,CAACV,EAAO,WACV,UAATA,kBACUV,EAAMgB,SACdA,MAAQ,iBAGN,6zCC1GG,CAEXxB,OAAQ,CACLC,KAAMC,QACLC,SAAS,GAGbE,QAAS,CACLJ,KAAMC,QACNC,SAAS,gHCuCXK,EAAQC,EAAI,MAEZoB,EAAQpB,GAAI,GAEZqB,EAAOrB,GAAI,GAEXC,EAAUC,GAAS,SAEjBoB,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAKC,QACrIH,EAAML,MACCN,EAAKe,oBAGTf,IAGPgB,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAG3CtB,EAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEpDuB,EAAO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAErItB,EAAMb,WACA+B,EAAIZ,MAAK,IAAMC,KAAKpB,SAAW,MAAW,MACzCkC,EAAKf,MAAK,IAAMC,KAAKpB,SAAW,MAAW,MAC5CY,EAAIO,MAAK,IAAMC,KAAKpB,SAAW,MAAW,MACzCmC,EAAKhB,MAAK,IAAMC,KAAKpB,SAAW,MAAW,WAIhDqB,EAAM,UAERS,EAAKN,SACD,GAAKO,EAAIT,MAAM,EAAG,MAClB,GAAKS,EAAIT,MAAM,GAAI,MACnB,GAAK,CAAC,SAAUS,EAAIT,MAAM,GAAI,OAAQY,EAAKZ,MAAM,EAAG,MACpD,GAAK,CAAC,UAAWY,EAAKZ,MAAM,EAAG,GAAI,aAEnC,GAAKV,IACL,GAAKuB,EAAKb,MAAM,EAAG,MACnB,GAAKa,EAAKb,MAAM,GAAI,MACpB,GAAK,CAAC,SAAUa,EAAKb,MAAM,GAAI,IAAK,UAGrCD,KAGLe,EAASzB,GAAS,IACb,CAACO,EAAO,KACNA,EAEQ,QAATA,EAAuBW,EAAML,OAASM,EAAKN,MAAQ,MAAQ,MAExDN,EAJW,KAQpBK,EAAmB,CAACC,EAAQ,QACxBnB,SAAWoB,IAAIC,GAAGrB,UAEpByB,EAAKN,OAAmB,QAAVA,EAAwBK,EAAML,OAASK,EAAML,MAE1DM,EAAKN,OAAmB,QAAVA,EACL,SAAVA,EAAyBM,EAAKN,OAAQ,EAE5B,UAAVA,KACM,2BACQhB,EAAMgB,cAEdA,MAAQG,aAAY,OAChB,eACP,cAKD,SAAUH,GAd2BM,EAAKN,OAAQ,GAiBtDI,EAAa,CAACV,EAAO,WACV,UAATA,kBACUV,EAAMgB,SACdA,MAAQ,iBAGN,ohDCnILa,OADQ,CAGX/B,KAAM,CACFL,KAAMM,OACNJ,QAASmC,EAAW,WAAY,SAGpClC,YAAa,CACTH,KAAMC,QACNC,QAASmC,EAAW,WAAY,gBAGpCC,QAAS,CACLtC,KAAMC,QACNC,QAASmC,EAAW,WAAY,YAGpCE,SAAU,CACNvC,KAAMC,QACNC,QAASmC,EAAW,WAAY,aAGpCG,KAAM,CACFxC,KAAMM,OACNJ,QAASmC,EAAW,WAAY,SAGpCI,WAAY,CACRzC,KAAMC,QACNC,QAASmC,EAAW,WAAY,eAGpCK,YAAa,CACT1C,KAAMC,QACNC,QAASmC,EAAW,WAAY,gBAGpCtC,OAAQ,CACJC,KAAMC,QACNC,QAASmC,EAAW,WAAY,WAGpCM,oBAAqB,CACjB3C,KAAMC,QACNC,QAASmC,EAAW,WAAY,wBAGpCO,oBAAqB,CACjB5C,KAAMC,QACNC,QAASmC,EAAW,WAAY,wBAGpCQ,KAAM,CACF7C,KAAMC,QACNC,QAASmC,EAAW,WAAY,SAGpCS,QAAS,CACL9C,KAAMC,QACNC,QAASmC,EAAW,WAAY,YAGpCU,OAAQ,CACJ/C,KAAM,CAACM,OAAQ0C,QACf9C,QAASmC,EAAW,WAAY,WAGpCY,WAAY,CACRjD,KAAMM,OACNJ,QAASmC,EAAW,WAAY,eAGpCa,YAAa,CACTlD,KAAMM,OACNJ,QAASmC,EAAW,WAAY,gBAGpCjC,QAAS,CACLJ,KAAMC,QACNC,QAASmC,EAAW,WAAY,mJCrBlCc,EAAS,CAACC,EAAI,QACV,SAAUA,IAIdC,EAAa,OACT,UAIJC,EAAY,OACR,YAIJC,EAAW,OACP,WAIJC,EAAY,OACR,wwDCnCJX,EAAOrC,GAAI,GACXH,EAAOG,EAAI,IACXiD,EAAMjD,GAAI,GACVT,EAASS,GAAI,GACbe,EAAQf,EAAI,IAEZkD,QASInC,MAAQ,KACTA,OAAQ,IACRA,MAVO,CACR,EAAG,GACH,EAAG,SACH,EAAG,OACH,EAAG,SACH,EAAG,IAKUoC,KACbpC,MAAkB,IAAVoC,IACLpC,MAAkB,IAAVoC,GAGbR,QACI5B,OAASqC,UACPC,IAAItC,EAAMA,QAGhBiC,EAAY,KACVjC,EAAMA,MAAMuC,WAAcvC,MAAQA,EAAMA,MAAMwC,OAAO,EAAGxC,EAAMA,MAAMuC,OAAS,YACzED,IAAItC,EAAMA"}