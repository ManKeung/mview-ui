@import "../iconfont/iconfont.scss";

@for $i from 1 through 5 {
	.m-line-#{$i} {
		/* #ifdef APP-NVUE */
		// nvue下，可以直接使用lines属性，这是weex特有样式
		lines: $i;
		text-overflow: ellipsis;
		overflow: hidden;
		/* #endif */

		/* #ifndef APP-NVUE */
		// vue下，单行和多行显示省略号需要单独处理
		@if $i == 1 {
			overflow: hidden;
			white-space: nowrap;
			text-overflow: ellipsis;
		} @else {
			display: -webkit-box!important;
			overflow: hidden;
			text-overflow: ellipsis;
			word-break: break-all;
			-webkit-line-clamp: $i;
			-webkit-box-orient: vertical!important;
		}
		/* #endif */
	}
}

// 此处加上!important并非随意乱用，而是因为目前*.nvue页面编译到H5时，
// App.vue的样式会被uni-app的view元素的自带border属性覆盖，导致无效
// 综上，这是uni-app的缺陷导致我们为了多端兼容，而必须要加上!important
// 移动端兼容性较好，直接使用0.5px去实现细边框，不使用伪元素形式实现

.m-border {
	border-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-style: solid;
}

.m-border-top {
	border-top-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-top-style: solid;
}

.m-border-left {
	border-left-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-left-style: solid;
}

.m-border-right {
	border-right-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-right-style: solid;
}

.m-border-bottom {
	border-bottom-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-bottom-style: solid;
}

.m-border-top-bottom {
	border-top-width: 0.5px!important;
	border-bottom-width: 0.5px!important;
	border-color: $m-border-color!important;
    border-top-style: solid;
    border-bottom-style: solid;
}

// 去除button的所有默认样式，让其表现跟普通的view、text元素一样
.m-reset-button {
	padding: 0;
	background-color: transparent;
	/* #ifndef APP-PLUS */
	font-size: inherit;
	line-height: inherit;
	color: inherit;
	/* #endif */
	/* #ifdef APP-NVUE */
	border-width: 0;
	/* #endif */
}

/* #ifndef APP-NVUE */
.m-reset-button::after {
   border: none;
}
/* #endif */

.m-hover-class {
	opacity: 0.7;
}
